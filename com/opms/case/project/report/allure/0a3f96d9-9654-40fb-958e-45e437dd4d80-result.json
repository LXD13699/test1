{"name": "testAddProject6", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <com.opms.case.project.testAddPro.TestAdd object at 0x0000020829779490>\n\n    @allure.feature(\"功能点：opms添加项目\")\n    @allure.step(\"测试步骤：不登录，点击添加\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    def testAddProject6(self):\n        s = requests.session()\n>       res = addProjectManager.AddProManager(s).addManager()\n\ntestAddPro.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\api\\project\\addProjectManager.py:16: in addManager\n    return res.json()\nC:\\Users\\86135\\AppData\\Roaming\\Python\\Python38\\site-packages\\requests\\models.py:910: in json\n    return complexjson.loads(self.text, **kwargs)\nD:\\software\\python\\lib\\json\\__init__.py:357: in loads\n    return _default_decoder.decode(s)\nD:\\software\\python\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000020826D7C6D0>\ns = '<!DOCTYPE html>\\r\\n<html lang=\"en\">\\r\\n<head>\\r\\n<meta charset=\"utf-8\">\\r\\n<title>OPMS管理系统</title>\\r\\n<meta name=\"vie... src=\"/static/js/jquery.validate.js\"></script>\\r\\n<script src=\"/static/js/opms.js\"></script>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nD:\\software\\python\\lib\\json\\decoder.py:355: JSONDecodeError"}, "steps": [{"name": "测试步骤：不登录，点击添加", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "trace": "  File \"C:\\Users\\86135\\AppData\\Roaming\\Python\\Python38\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\software\\pycharmTest\\test1\\com\\opms\\case\\project\\testAddPro.py\", line 82, in testAddProject6\n    res = addProjectManager.AddProManager(s).addManager()\n  File \"D:\\software\\pycharmTest\\test1\\com\\opms\\api\\project\\addProjectManager.py\", line 16, in addManager\n    return res.json()\n  File \"C:\\Users\\86135\\AppData\\Roaming\\Python\\Python38\\site-packages\\requests\\models.py\", line 910, in json\n    return complexjson.loads(self.text, **kwargs)\n  File \"D:\\software\\python\\lib\\json\\__init__.py\", line 357, in loads\n    return _default_decoder.decode(s)\n  File \"D:\\software\\python\\lib\\json\\decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"D:\\software\\python\\lib\\json\\decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n"}, "start": 1641969094744, "stop": 1641969095552}], "start": 1641969094744, "stop": 1641969095553, "uuid": "e0a1739c-4c5a-40cf-80c6-f951a807ba33", "historyId": "44f94f054b19de38bb483a624768e165", "testCaseId": "19265e4ab9b5c65bfc85c11f8251f65f", "fullName": "opms.case.project.testAddPro.TestAdd#testAddProject6", "labels": [{"name": "feature", "value": "功能点：opms添加项目"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "opms.case.project"}, {"name": "suite", "value": "testAddPro"}, {"name": "subSuite", "value": "TestAdd"}, {"name": "host", "value": "DESKTOP-AN7UERG"}, {"name": "thread", "value": "13816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "opms.case.project.testAddPro"}]}